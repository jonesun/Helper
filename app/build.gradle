apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        applicationId "jone.helper"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 2
        versionName "2.0"
        ndk {
            moduleName "tp_file"
            //stl "stlport_shared"    //对应APP_STL
            ldLibs "log", "z", "m"  //链接时使用到的库，对应LOCAL_LDLIBS
            //cFlags 编译gcc的flag，对应LOCAL_CFLAGS
        }
    }
    //打包签名
    signingConfigs {
        release {
            storeFile file('store.jks')
            storePassword 'sunjianan22'
            keyAlias 'jonesun'
            keyPassword 'sunjianan22'
//            storeFile file(System.getenv("KEYSTORE"))
//            storePassword System.getenv("KEYSTORE_PASSWORD")
//            keyAlias System.getenv("KEY_ALIAS")
//            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    /****代码混淆****/
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    /****代码混淆end****/

//    buildTypes {
//        release {
//            runProguard false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//    }
    //    //生成不同的APK包，有不同的包名，或者不同的资源
//    productFlavors {
//        appJone {
//            packageName "com.jone.appJone"
////            versionCode 20
//        }
////        jone {
////            packageName "com.jone.app"
////        }
//
//    }

    sourceSets {
        main {
            //java.srcDirs = ['src/main/java']
            res.srcDirs = getSrcDirs('src/main/res', 'src/main/res-modules')
        }
    }
}

def getSrcDirs(defaultSrcDirs, customSrcDirsRoot) {
    ArrayList empty1 = [defaultSrcDirs]
    FileTree tree = fileTree(dir: customSrcDirsRoot)
    tree.visit { element ->
        if (element.isDirectory() && element.relativePath.toString().indexOf("/") == -1) {
            empty1.add element.file.toString()
        }
    }
    return empty1;
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //compile 'com.android.support:appcompat-v7:20.0.0'
    compile 'com.android.support:support-v13:20.0.0'
    compile 'com.android.support:cardview-v7:21.+'
    compile 'com.belerweb:pinyin4j:2.5.0'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.google.code.gson:gson:2.3'
    compile project(':libraries:Gallery3D')
    compile project(':libraries:Camera')
    compile project(':libraries:JoneLib')
    compile project(':libraries:ZxingScan')
}
